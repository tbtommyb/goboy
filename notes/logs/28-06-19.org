* Actions
- Made notes on basic processor functioning. Want to get first instruction, LD working a bit.
- Need registers. Started off with struct but can't dynamically reference and wanted to avoid `getA` etc.
- Switched to map. This works better. Created type alias for Register which isn't type safe but means can use bit pattern of register to access map. Conflict with some registers. Hopefully will be ok. NO!
- Added decoder to turn opcode into struct. Seems more self-documenting than lots of bitwise operations.
- tests currently are quite low level using `get` and `set`.
- for next post talk about immediate instr, which will involve basic memory model and working PC. Can then change tests to pass in instruction opcodes and test state, which involves less knowledge about implementation details.
* LD R, R
Changed things to allow multi-opcode instructions.
Added memory and a proper loop.
Added Opcode() method to Instruction interface
Added InvalidInstruction and EmptyInstruction
Need to handle cycles correctly
Added LoadMemoryRegister and StoreMemoryRegister instructions
Simplified decoder test structure a little
